https://www.youtube.com/watch?v=vjlY0vFRz-M


sub-collections with Firebase. prob should look at this.
https://howtofirebase.com/firestore-sub-collections-2e23c998540d











I don't really think its a good idea to downgrade your version of "react-redux" to 5.1.1.
Packages are updated for a reason, locking into an old version 
could potentially open you up to a number of issues, including security issues.
The reason this issue is caused is explained here: prescottprue/react-redux-firebase#581
In order to fix this, you need to first use a version 3.X of "react-redux-firebase".
At time of writing this is version 3.0.0-alpha.11.


Then, you need to replace reactReduxFirebase from 'react-redux-firebase' with
ReactReduxFirebaseProvider and replace reduxFirestore from 'redux-firestore'
with createFirestoreInstance. This is explained on the migration document 
here: http://docs.react-redux-firebase.com/history/v3.0.0/docs/v3-migration-guide.html


Finally, you need to remove the reduxFirestore(fbConfig), 
reactReduxFirebase(fbConfig) from the store inside of index.js 
and wrap <App /> in ReactReduxFirebaseProvider, as follows:

 <Provider store={store}>
   <ReactReduxFirebaseProvider
     firebase={fbConfig}
     config={fbConfig}
     dispatch={store.dispatch}
     createFirestoreInstance={createFirestoreInstance}>
     <Router />
   </ReactReduxFirebaseProvider>
 </Provider>,
 document.getElementById('root')
)
I do think it was a bit of a shame that Shaun chose to use "react-redux-firebase" and "redux-firestore", 
because it takes away some of the "under the hood" stuff when interacting with firebase, its not necessary and 
leads to issues like this one. However, I understand why he did and hopefully this isn't too hard to follow/this fixes this problem for some people.

Could @iamshaunjp comment on this just to clarify this is what he would also recommend?

